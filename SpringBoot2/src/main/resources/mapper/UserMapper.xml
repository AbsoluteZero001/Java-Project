<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.springboot.springboot2.mapper.UserMapper">

    <!-- 插入用户 -->
    <insert id="insertUser" parameterType="com.springboot.springboot2.pojo.User" useGeneratedKeys="true" keyProperty="userId">
        INSERT INTO user(account, password, idcard, username, gender, age, user_type, user_status, user_roomid)
        VALUES(#{account}, #{password}, #{idcard}, #{username}, #{gender}, #{age}, #{userType}, #{userStatus}, #{userRoomId})
    </insert>

    <!-- 检查账号是否存在 -->
    <select id="countByAccount" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM user WHERE account = #{account}
    </select>

    <!-- 查询所有用户 -->
    <select id="selectAllUsers" resultType="com.springboot.springboot2.pojo.User">
        SELECT id,
               account,
               password,
               idcard,
               username,
               gender,
               age,
               user_type,
               user_status,
               user_roomid AS userRoomId
        FROM user
    </select>

    <!-- 根据账号查询用户 -->
    <select id="selectUserByAccount" parameterType="String" resultType="com.springboot.springboot2.pojo.User">
        SELECT id,
               account,
               password,
               idcard,
               username,
               gender,
               age,
               user_type,
               user_status,
               user_roomid AS userRoomId
        FROM user
        WHERE account = #{account}
    </select>

    <!-- 根据 id 删除用户 -->
    <delete id="deleteUserById" parameterType="int">
        DELETE FROM user WHERE id = #{id}
    </delete>

    <!-- 更新用户信息 -->
    <update id="updateUser" parameterType="com.springboot.springboot2.pojo.User">
        UPDATE user
        SET password = #{password},
            idcard = #{idcard},
            username = #{username},
            gender = #{gender},
            age = #{age},
            user_type = #{userType},
            user_status = #{userStatus},
            user_roomid = #{userRoomId}
        WHERE account = #{account}
    </update>
    <!-- 查询业主用户列表 -->
    <select id="owners" resultType="com.springboot.springboot2.pojo.User">
        SELECT id,
               account,
               password,
               idcard,
               username,
               gender,
               age,
               user_type,
               user_status,
               user_roomid AS userRoomId
        FROM user
        WHERE user_type = 3
    </select>

</mapper>
